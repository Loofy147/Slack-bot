# Kubernetes deployment for AI Orchestrator
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-orchestrator-api
  labels:
    app: ai-orchestrator
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-orchestrator
      component: api
  template:
    metadata:
      labels:
        app: ai-orchestrator
        component: api
    spec:
      containers:
      - name: api
        image: ai-orchestrator/api:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: orchestrator-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: orchestrator-secrets
              key: redis-url
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: orchestrator-secrets
              key: openai-api-key
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: orchestrator-secrets
              key: jwt-secret
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: ai-orchestrator-api-service
spec:
  selector:
    app: ai-orchestrator
    component: api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-orchestrator-worker
  labels:
    app: ai-orchestrator
    component: worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-orchestrator
      component: worker
  template:
    metadata:
      labels:
        app: ai-orchestrator
        component: worker
    spec:
      containers:
      - name: worker
        image: ai-orchestrator/worker:latest
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: orchestrator-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: orchestrator-secrets
              key: redis-url
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: orchestrator-secrets
              key: openai-api-key
        resources:
          requests:
            memory: "256Mi"
            cpu: "125m"
          limits:
            memory: "512Mi"
            cpu: "250m"

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-orchestrator-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - api.orchestrator.ai
    secretName: orchestrator-tls
  rules:
  - host: api.orchestrator.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-orchestrator-api-service
            port:
              number: 80